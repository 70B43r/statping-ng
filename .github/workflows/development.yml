name: Development Build
on:
  push:
    branches:
      - dev
    paths-ignore:
      - '**.md'

jobs:

  frontend:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-go@v2
        with:
          go-version: '1.14.2'
      - uses: actions/setup-node@v1
        with:
          node-version: '12.18.2'

      - name: Add GOBIN to PATH
        run: |
          echo "::add-path::$(go env GOPATH)/bin"
          echo ::set-env name=VERSION::$(cat version.txt)
        shell: bash

      - name: Install Global Dependencies
        run: npm install -g yarn sass cross-env

      - name: Download Frontend Dependencies
        working-directory: ./frontend
        run: yarn

      - name: Download Go mods
        run: |
          go mod download
          go mod verify
          make test-deps

      - name: Build Frontend Statping
        env:
          VERSION: ${{ env.VERSION }}
          COMMIT: ${{ github.sha }}
        run: make clean compile

      - name: Upload Compiled Frontend (rice-box.go)
        uses: actions/upload-artifact@v1
        with:
          name: static-rice-box
          path: ./source

      - name: Configure AWS credentials for Asset uploads
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-west-2

      - name: Upload Static Assets to S3
        run: |
          tar -czvf source.tar.gz source/
          aws s3 cp source.tar.gz s3://assets.statping.com/commit/${{ github.sha }}/
          rm -rf source.tar.gz

  build:
    needs: frontend
    runs-on: ubuntu-latest
    strategy:
      matrix:
        platform: [linux]
        arch: [386, amd64, arm-7, arm-6, arm64]
        include:
          - platform: darwin
            arch: amd64
          - platform: windows
            arch: amd64

    steps:
      - uses: actions/checkout@v2

      - name: Download Compiled Frontend (rice-box.go)
        uses: actions/download-artifact@v1
        with:
          name: static-rice-box
          path: ./source

      - name: Add GOBIN to PATH
        run: |
          echo ::set-env name=VERSION::$(cat version.txt)
        shell: bash

      - name: Set Build Flags
        if: matrix.platform != 'darwin'
        run: echo ::set-env name=BUILD_FLAGS::'-extldflags -static'
        shell: bash

      - name: Build linux xgo
        uses: crazy-max/ghaction-xgo@v1
        env:
          VERSION: ${{ env.VERSION }}
          COMMIT: ${{ github.sha }}
        with:
          xgo_version: latest
          go_version: 1.15.x
          dest: build
          prefix: statping
          targets: ${{ matrix.platform }}/${{ matrix.arch }}
          v: false
          x: false
          pkg: cmd
          buildmode: pie
          ldflags: -s -w -X main.VERSION=${{ env.VERSION }} -X main.COMMIT=${{ env.COMMIT }} ${{ env.BUILD_FLAGS }}

      - name: Upload Compiled Statping Binary
        uses: actions/upload-artifact@v1
        with:
          name: statping-${{ matrix.platform }}-${{ matrix.arch }}
          path: ./build


  package:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Set Version
        run: |
          echo ::set-env name=VERSION::$(cat version.txt)
        shell: bash

      - name: Download All Binaries
        uses: actions/download-artifact@v2

      - name: Contents
        run: ls -R

      - name: Production Ready Binaries
        run: |
          cd build && chmod +x *
          mv statping-darwin-10.6-amd64 statping && tar -czvf statping-darwin-amd64.tar.gz statping && rm -f statping
          mv statping-linux-386 statping && tar -czvf statping-linux-386.tar.gz statping && rm -f statping
          mv statping-linux-amd64 statping && tar -czvf statping-linux-amd64.tar.gz statping && rm -f statping
          mv statping-linux-386 statping && tar -czvf statping-linux-386.tar.gz statping && rm -f statping
          mv statping-linux-arm-7 statping && tar -czvf statping-linux-arm-7.tar.gz statping && rm -f statping
          mv statping-linux-arm-6 statping && tar -czvf statping-linux-arm-6.tar.gz statping && rm -f statping
          mv statping-linux-arm64 statping && tar -czvf statping-linux-arm64.tar.gz statping && rm -f statping
          mv statping-windows-4.0-386.exe statping.exe && zip statping-windows-386.zip statping.exe && rm -f statping.exe
          mv statping-windows-4.0-amd64.exe statping.exe && zip statping-windows-amd64.zip statping.exe && rm -f statping.exe

      - name: Upload Releases
        id: upload-assets
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          VERSION: ${{ env.VERSION }}
        with:
          tag_name: dev-v${{ env.VERSION }}
          draft: true
          prerelease: true
          files: |
            build/statping-darwin-amd64.tar.gz
            build/statping-linux-386.tar.gz
            build/statping-linux-amd64.tar.gz
            build/statping-linux-arm-6.tar.gz
            build/statping-linux-arm-7.tar.gz
            build/statping-linux-arm64.tar.gz
            build/statping-windows-386.zip
            build/statping-windows-amd64.zip

      - name: Upload Compiled Binaries to S3
        run: |
          aws s3 cp build/*.* s3://assets.statping.com/commit/${{ github.sha }}/

